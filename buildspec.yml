version: 0.2

env:
  variables:
    # Default values - override in CodeBuild project environment
    AWS_DEFAULT_REGION: "us-east-1"
    AWS_ACCOUNT_ID: "123456789012"
    IMAGE_REPO_NAME: "amrti-app"
    IMAGE_TAG: "latest"
    ECS_CLUSTER_NAME: "amrti-cluster"
    ECS_SERVICE_NAME: "amrti-service"
    CONTAINER_NAME: "amrti-container"
  parameter-store:
    # Store sensitive values in AWS Systems Manager Parameter Store
    # Example: /amrti/database/url
    # DATABASE_URL: /amrti/database/url

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
      - echo Repository URI is $REPOSITORY_URI
      - echo Image tag is $IMAGE_TAG

  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG .
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $REPOSITORY_URI:$IMAGE_TAG
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $REPOSITORY_URI:latest

  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - docker push $REPOSITORY_URI:latest
      - echo Writing image definitions file...
      - |
        cat > imagedefinitions.json << EOF
        [
          {
            "name": "$CONTAINER_NAME",
            "imageUri": "$REPOSITORY_URI:$IMAGE_TAG"
          }
        ]
        EOF
      - cat imagedefinitions.json
      - echo Updating ECS service...
      - |
        aws ecs update-service \
          --cluster $ECS_CLUSTER_NAME \
          --service $ECS_SERVICE_NAME \
          --force-new-deployment \
          --region $AWS_DEFAULT_REGION
      - echo Deployment initiated successfully

artifacts:
  files:
    - imagedefinitions.json
    - '**/*'
  name: amrti-build-$(date +%Y-%m-%d)

cache:
  paths:
    - '/root/.npm/**/*'
    - 'node_modules/**/*'
